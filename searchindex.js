Search.setIndex({"docnames": ["c/pthread", "c/sys/time", "getstarted", "index", "intro", "manual", "neat/lexer", "neat/parser", "neat/runtime", "neat/runtime/array", "std", "std/algorithm", "std/container/binheap", "std/file", "std/json", "std/math", "std/math/matrix", "std/math/vector", "std/process", "std/range/iota", "std/sha256", "std/stdio", "std/string", "std/thread", "std/time"], "filenames": ["c/pthread.rst", "c/sys/time.rst", "getstarted.rst", "index.rst", "intro.rst", "manual.rst", "neat/lexer.rst", "neat/parser.rst", "neat/runtime.rst", "neat/runtime/array.rst", "std.rst", "std/algorithm.rst", "std/container/binheap.rst", "std/file.rst", "std/json.rst", "std/math.rst", "std/math/matrix.rst", "std/math/vector.rst", "std/process.rst", "std/range/iota.rst", "std/sha256.rst", "std/stdio.rst", "std/string.rst", "std/thread.rst", "std/time.rst"], "titles": ["c.pthread", "c.sys.time", "Getting Started", "The Neat Language", "Introduction", "The Neat Language", "neat.lexer", "neat.parser", "neat.runtime", "neat.runtime.array", "Standard Library", "std.algorithm", "std.container.binheap", "std.file", "std.json", "std.math", "std.math.matrix", "std.math.vector", "std.process", "std.range.iota", "std.sha256", "std.stdio", "std.string", "std.thread", "std.time"], "terms": {"modul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "entri": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "pthread_attr_t": 0, "pthread_cond_t": 0, "pthread_key_t": 0, "pthread_mutex_t": 0, "pthread_mutexattr_t": 0, "pthread_t": 0, "class": [0, 1, 4, 6, 7, 12, 14, 16, 19, 20, 23, 24], "todo": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 19, 21], "document": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 19, 21], "timev": 1, "The": [2, 4, 13, 16, 18, 20, 22, 23, 24], "compil": [2, 3, 4, 5], "moment": [2, 4], "onli": [2, 4, 5, 7, 23], "test": [2, 4, 7, 8], "64": [2, 5], "bit": [2, 5], "x86": 2, "linux": [2, 4], "howev": [2, 4, 5], "should": [2, 3, 4, 5, 7], "work": [2, 4, 5, 23], "other": [2, 4, 5, 16, 24], "platform": [2, 4, 5], "abl": [2, 5], "port": 2, "32": [2, 5], "littl": 2, "effort": 2, "There": [2, 4], "two": [2, 4, 5, 17, 22], "avail": [2, 5, 23], "depend": [2, 4, 5], "backend": 2, "14": 2, "note": [2, 3, 5, 24], "both": [2, 5], "requir": [2, 4, 5], "certain": 2, "also": [2, 4, 5, 22], "while": [2, 4], "releas": [2, 23], "mai": [2, 4, 5, 23], "cannot": [2, 4, 5], "becaus": [2, 5], "built": [2, 4, 5], "against": 2, "primari": [2, 5], "question": 2, "thu": 2, "which": [2, 4, 5, 14, 22, 23], "you": [2, 3, 4, 5], "expect": 2, "default": [2, 4, 5, 23], "my": [2, 4], "knowledg": [2, 5], "asid": 2, "inher": 2, "differ": [2, 4], "": [2, 3, 4, 5, 8, 11, 13, 22, 23, 24], "equal": 2, "capabl": 2, "choic": [2, 4], "larg": 2, "down": [2, 5], "person": 2, "prefer": [2, 5], "instruct": 2, "assum": 2, "ubuntu": 2, "22": 2, "04": 2, "take": [2, 4, 5, 24], "step": [2, 4, 11], "equival": 2, "your": [2, 4], "system": [2, 4, 10, 18, 24], "packag": [2, 3, 4], "apt": 2, "xz": 2, "util": 2, "wget": 2, "dev": 2, "clang": 2, "download": [2, 4], "latest": 2, "from": [2, 4, 5, 7, 11, 13, 14, 16, 24], "http": [2, 5], "github": [2, 4, 5], "com": [2, 5], "lang": [2, 5], "unpack": 2, "archiv": 2, "tar": 2, "xf": 2, "v": [2, 17], "cd": 2, "build": [2, 4], "sh": 2, "symlink": 2, "somewher": [2, 4], "path": [2, 13, 18], "mkdir": [2, 10, 13], "p": [2, 5, 22], "home": 2, "local": 2, "bin": 2, "ln": 2, "pwd": 2, "cat": 2, "hello": [2, 5, 14, 22], "nt": [2, 3, 5], "eof": [2, 7], "import": [2, 3, 4], "std": [2, 3, 5, 10], "stdio": [2, 3, 5, 10], "void": [2, 3, 5, 7, 8, 12, 13, 14, 18, 20, 21, 23, 24], "main": [2, 3], "print": [2, 3, 5, 10, 21], "world": [2, 5, 14, 22], "If": [2, 3, 4, 11, 13, 23, 24], "now": [2, 4, 5, 24], "readi": [2, 3], "come": [2, 4], "manag": [2, 4, 23], "To": [2, 4, 5, 23], "configur": 2, "creat": [2, 4, 13, 16, 20, 23], "file": [2, 3, 4, 5, 10, 14], "json": [2, 3, 4, 10], "folder": [2, 5, 13], "sourc": [2, 4, 5], "src": [2, 5], "type": [2, 3, 4, 7, 14, 16, 23, 24], "prognam": 2, "exampl": [2, 3, 5, 11, 13, 14, 15, 17, 22, 23], "run": [2, 4, 5, 23, 24], "contain": [2, 3, 4, 5, 10, 14], "attempt": 2, "format": [2, 4], "repo": 2, "significantli": 2, "simpler": 2, "all": [2, 4, 5, 7, 10, 11, 20, 22, 23], "effect": [2, 16], "execut": [2, 4, 5, 18], "gener": 2, "name": [2, 4, 18], "thi": [2, 4, 5, 7, 12, 14, 15, 16, 20, 23, 24], "doe": [2, 5], "noth": 2, "when": [2, 4, 5, 23], "unittest": [2, 3], "ad": 2, "compilervers": 2, "match": [2, 5, 7, 22, 23], "A": [2, 3, 5, 23], "map": [2, 5, 10, 11], "git": 2, "remot": 2, "url": 2, "implement": [2, 16, 23], "semant": 2, "can": [2, 4, 5, 23], "specifi": [2, 5], "follow": [2, 5], "wai": [2, 4, 5], "ani": [2, 4, 5, 10, 11], "do": [2, 4, 5, 23], "x": [2, 5, 11, 15, 16], "y": [2, 11, 15, 16], "z": [2, 11, 16], "semver": 2, "compat": 2, "That": [2, 4, 5], "must": [2, 4, 5, 13, 14, 20, 23, 24], "greater": 2, "newer": 2, "etc": 2, "resolut": 2, "proce": 2, "recurs": 2, "backtrack": 2, "tag": [2, 5], "vx": 2, "instanc": [2, 5, 20], "v1": 2, "0": [2, 5, 11, 17, 22, 23], "3": [2, 5, 11, 15, 22], "On": 2, "first": [2, 5, 7, 22, 23], "write": [2, 4, 5, 13], "select": [2, 5, 16], "lock": [2, 23], "commit": [2, 4, 7], "ensur": [2, 5], "reproduc": 2, "ignor": 2, "With": [2, 4], "d": [2, 3, 4, 5, 7, 8, 15], "code": [2, 3, 4, 5], "mani": [2, 5, 7], "style": [2, 4, 5], "program": [2, 3, 4, 5], "off": 2, "happi": 2, "have": [2, 3, 4, 5, 7, 23], "problem": 2, "thei": [2, 4, 5, 23], "still": [2, 4, 24], "As": [2, 4, 5], "heavili": [2, 3], "alpha": 2, "diverg": [2, 4, 5], "too": [2, 4], "far": [2, 16], "own": 2, "probabl": [2, 3], "explod": 2, "keep": [2, 4, 5, 23], "mind": [2, 4], "re": [2, 3, 4], "unsur": 2, "alwai": [2, 4], "ask": [2, 4], "me": [2, 4], "And": [2, 4], "seem": [2, 4], "like": [2, 3, 5], "isn": 2, "someth": [2, 3, 4], "veri": [2, 4], "plausibl": 2, "haven": 2, "need": [2, 5], "yet": 2, "randomli": 2, "doesn": [2, 4, 22], "plausibli": 2, "bug": [2, 4], "runtim": [2, 4], "absolut": [2, 13, 15], "critic": 2, "try": [2, 3, 4, 5], "arrang": 2, "so": [2, 3, 5, 24], "never": [2, 4, 5], "mutat": [2, 4], "paramet": [2, 4, 5, 13, 15], "encapsul": 2, "method": [2, 5, 24], "call": [2, 20, 23], "direct": 2, "altern": [2, 4], "old": [2, 4], "state": [2, 4, 5, 24], "return": [2, 5, 7, 11, 13, 14, 15, 17, 18, 20, 22, 23, 24], "new": [2, 3, 5, 20, 23], "ha": [2, 4, 5, 14, 23], "sever": 2, "featur": [2, 5], "support": [2, 4], "sumtyp": [2, 4, 5], "tupl": [2, 4], "allow": [2, 4, 5, 23, 24], "defin": [2, 5], "complex": 2, "data": [2, 4, 5, 13, 16, 20, 22], "structur": [2, 5], "speak": 2, "domain": [2, 4], "layer": 2, "ie": [2, 5, 7, 15], "pass": [2, 5], "reserv": 2, "react": [2, 23], "event": 2, "involv": 2, "chang": [2, 4, 5], "applic": 2, "make": [2, 3], "sens": 2, "But": [2, 4, 5], "gospel": 2, "much": [2, 4], "refer": [2, 3, 5], "whatev": [2, 4], "reason": [2, 5], "advic": [2, 4], "usual": 2, "goe": [2, 5], "prematur": 2, "would": 2, "stronger": 2, "some": [2, 3, 4, 5, 23, 24], "incredibli": 2, "submit": 2, "report": [2, 4], "m": [2, 4], "entir": [2, 5], "idiom": 2, "forbidden": 2, "rememb": 2, "thing": [2, 4, 5], "todai": 2, "shouldn": 2, "simpli": 2, "thought": 2, "add": [2, 4, 5, 16, 23], "check": 2, "them": [2, 4, 5], "straightforward": [2, 4], "fashion": 2, "ll": 2, "more": [2, 4, 7], "amen": 2, "fast": 2, "long": [2, 5, 7, 8, 15], "unduli": 2, "complic": 2, "languag": 2, "one": [2, 4, 5, 7, 23, 24], "interact": 2, "c": [2, 3, 4, 7, 8, 22], "api": 2, "particip": 2, "count": [2, 3, 5, 23], "sure": 2, "outliv": 2, "how": [2, 4, 5], "modifi": [2, 5, 23], "natur": 2, "arrai": [2, 4, 8, 10, 11, 14, 22], "Or": 2, "zero": [2, 22], "escap": 2, "analysi": 2, "alloc": [2, 4, 5], "deleg": [2, 7, 23], "whether": 2, "lambda": [2, 3, 4, 11], "stack": 2, "frame": 2, "want": [2, 4, 23], "timer": 2, "task": [2, 10, 23, 24], "subclass": [2, 5], "declar": 2, "insid": [2, 5], "timertask": 2, "wish": 2, "principl": 2, "access": [2, 5, 23, 24], "everi": [2, 4, 5, 11, 22], "limit": [2, 4, 5], "yourself": [2, 5], "load": [2, 5, 14], "similarli": 2, "read": [2, 3, 4, 5, 13], "give": 2, "introduct": [2, 3], "rest": [2, 22], "were": [2, 5], "decis": [2, 4], "made": [2, 4, 5], "dure": 2, "design": [2, 4, 5], "back": 2, "hamper": 2, "broadli": 2, "where": [2, 5], "out": [2, 3, 4, 5, 24], "aspect": 2, "modif": 2, "deliber": 2, "optim": [2, 5], "feel": 2, "free": [2, 22], "experi": 2, "copi": [2, 16], "patch": [2, 4], "welcom": [2, 4], "i": [3, 5, 8, 11, 14, 15, 17, 20, 22, 23, 24], "static": [3, 4], "nativ": [3, 4, 5], "autom": [3, 4], "oop": [3, 4], "macro": [3, 4], "Its": 3, "syntax": [3, 4], "inspir": 3, "here": [3, 5], "longest": 3, "line": [3, 5], "longestlin": 3, "listcomprehens": 3, "string": [3, 4, 5, 6, 7, 8, 10, 13, 14, 18, 21], "arg": [3, 5, 14, 18], "auto": [3, 5, 11, 14, 23], "text": [3, 6, 7, 13, 22], "readtext": [3, 10, 13], "1": [3, 4, 5, 11, 17, 22, 23], "argmax": 3, "strip": [3, 7, 10, 22], "length": [3, 4, 5, 9, 10, 11, 12, 17, 19, 22], "split": [3, 10, 22, 24], "n": [3, 5], "notic": 3, "befor": [3, 5], "jump": [3, 5], "pleas": [3, 4], "section": 3, "good": [3, 4], "bad": 3, "libera": 3, "chat": 3, "formerli": 3, "freenod": 3, "drop": 3, "sai": [3, 4], "hi": 3, "forum": 3, "get": [3, 4, 5, 14, 23], "start": [3, 22, 24], "instal": [3, 4], "llvm": 3, "gcc": 3, "project": [3, 4, 16], "what": [3, 5], "why": 3, "anoth": [3, 5, 16, 24], "okai": 3, "digress": 3, "product": [3, 17], "secur": 3, "final": [3, 20], "lexic": 3, "level": [3, 4], "statement": 3, "express": [3, 4], "function": [3, 4, 24], "templat": [3, 4], "rang": [3, 4, 10, 11], "standard": [3, 21], "librari": [3, 4], "algorithm": [3, 10], "binheap": [3, 10], "math": [3, 10], "matrix": [3, 10], "vector": [3, 4, 10, 16], "process": [3, 10], "iota": [3, 10], "sha256": [3, 10], "thread": [3, 10], "time": [3, 4, 5, 10, 20, 23], "alreadi": [4, 5], "know": 4, "similar": 4, "d1": 4, "without": [4, 5, 24], "garbag": 4, "collector": 4, "less": [4, 5], "power": [4, 15], "ar": [4, 5, 16, 23], "theori": 4, "compar": 4, "upsid": 4, "downsid": 4, "It": [4, 5, 23], "lot": [4, 5], "younger": 4, "slower": 4, "walter": 4, "bright": 4, "an": [4, 5, 11, 14, 16, 22, 23], "actual": 4, "wizard": 4, "well": 4, "being": [4, 5], "extens": [4, 5], "cumbersom": 4, "construct": [4, 5], "sum": [4, 24], "am": 4, "awar": 4, "peopl": 4, "who": 4, "big": 4, "risk": 4, "subject": 4, "massiv": 4, "reduc": 4, "mechan": 4, "older": 4, "version": [4, 5], "pin": 4, "futur": 4, "origin": [4, 11, 22], "last": [4, 7], "us": [4, 5, 23], "full": 4, "control": [4, 5], "rate": 4, "updat": [4, 20, 23], "most": 4, "fun": 4, "biggest": 4, "innov": 4, "rust": 4, "primarili": 4, "let": 4, "nobodi": 4, "understand": [4, 5], "hell": 4, "anymor": 4, "approach": 4, "opaqu": 4, "go": 4, "specif": 4, "premis": 4, "googl": 4, "develop": 4, "incompet": 4, "kept": 4, "awai": 4, "semblanc": 4, "shine": 4, "light": 4, "empower": 4, "snip": 4, "ten": 4, "minut": 4, "gripe": 4, "believ": 4, "easi": 4, "stupid": [4, 5], "tell": 4, "nice": 4, "readabl": [4, 5], "error": [4, 5, 6, 7], "anywai": 4, "result": [4, 11, 20], "prototyp": 4, "simpl": 4, "core": 4, "predict": 4, "magic": 4, "dream": 4, "singl": [4, 5], "inherit": [4, 5], "multipl": [4, 5, 20, 23], "interfac": [4, 5], "intend": [4, 5, 23], "wherea": 4, "struct": 4, "valu": [4, 5, 7, 11, 14, 15, 18, 20, 23], "plain": 4, "repres": [4, 14, 16], "look": [4, 5], "For": [4, 22, 23], "high": 4, "oper": [4, 5, 16, 23], "yield": [4, 11], "success": [4, 7], "afford": 4, "nest": 4, "pure": [4, 5], "comput": [4, 17, 20], "block": [4, 18, 20, 23], "compos": 4, "testabl": 4, "rich": 4, "set": [4, 5, 14, 23], "constructor": [4, 5], "includ": [4, 5], "hashmap": 4, "variabl": [4, 18, 23], "immut": 4, "unreferenc": 4, "easili": [4, 5], "mark": [4, 5], "mutabl": [4, 5], "divid": [4, 5], "each": [4, 5], "correspond": [4, 5], "non": [4, 5], "transit": [4, 5], "reusabl": 4, "though": 4, "begin": [4, 5, 7], "stage": 4, "reus": [4, 5], "handl": 4, "propag": [4, 5], "upcal": 4, "written": 4, "idiomat": 4, "bsd": 4, "licens": 4, "won": 4, "t": [4, 5, 8, 11, 12, 22, 23], "win": 4, "prize": 4, "stand": 4, "open": 4, "pull": 4, "request": 4, "ve": 4, "anyth": 4, "fix": 4, "In": [4, 5], "its": [4, 5, 24], "memori": 4, "strategi": [4, 5], "automat": [4, 5, 23], "lifetim": 4, "track": 4, "mostli": [4, 5], "transpar": 4, "user": 4, "total": 4, "expens": 4, "than": [4, 5], "cost": 4, "cleanup": 4, "overhead": 4, "evenli": 4, "distribut": [4, 23], "turn": 4, "he": 4, "said": 4, "gc": 4, "wa": 4, "faster": 4, "right": [4, 5, 11, 16], "could": 4, "vulner": 4, "cycl": 4, "At": 4, "address": 4, "avoid": 4, "better": 4, "been": [4, 7, 20, 23, 24], "commun": 4, "decad": 4, "half": 4, "u": [4, 5, 11, 23], "don": 4, "dealbreak": 4, "usag": 4, "somehow": 4, "none": [4, 5, 7], "ever": 4, "issu": 4, "java": 4, "fact": 4, "glibc": 4, "incur": 4, "arbitrari": 4, "delai": 4, "matter": 4, "fine": 4, "disagre": 4, "offshoot": 4, "realli": 4, "alien": 4, "folk": 4, "tire": 4, "argu": 4, "point": [4, 5, 15, 20], "No": 4, "hilari": 4, "subsystem": 4, "place": [4, 23], "between": [4, 15, 17, 23], "90": 4, "10": [4, 5, 11], "int": [4, 5, 6, 7, 8, 14, 15, 16, 19, 22, 23], "kei": [4, 14], "overload": 4, "bare": 4, "matric": 4, "part": [4, 13], "inevit": 4, "crop": 4, "up": [4, 23], "improv": [4, 5], "even": 4, "unfinish": 4, "think": 4, "pretti": 4, "slick": 4, "itself": 4, "unsaf": 4, "often": 4, "binari": [4, 5, 18], "meanwhil": 4, "prebuild": 4, "unrestrict": 4, "farm": 4, "vm": 4, "privat": [4, 5], "just": [4, 5], "perspect": 4, "find": [4, 5, 7, 10, 22], "importantli": 4, "mean": [4, 5], "var": 4, "bore": 4, "bui": 4, "drink": 4, "referenc": 4, "great": 4, "killer": 4, "talk": 4, "about": 4, "through": 5, "approxim": 5, "sequenc": 5, "goal": 5, "top": [5, 16], "bottom": [5, 8], "quickli": 5, "encod": 5, "utf": 5, "8": [5, 11], "comment": [5, 7], "end": [5, 13, 22], "appear": 5, "anywher": 5, "except": 5, "letter": 5, "underscor": 5, "digit": [5, 7], "dot": 5, "separ": [5, 11], "list": 5, "filenam": [5, 6, 7, 13], "instead": 5, "associ": 5, "proot": 5, "root": [5, 15], "rel": 5, "explicitli": 5, "dep1": 5, "dep2": 5, "pdep1": 5, "pdep2": 5, "accident": 5, "unrel": 5, "imposs": 5, "invis": 5, "public": 5, "second": [5, 7, 23, 24], "see": 5, "seen": 5, "convent": 5, "memcpi": 5, "dest": 5, "size_t": [5, 9, 12, 19], "manual": 5, "cimport": 5, "grep": 5, "5": [5, 11, 15, 22], "integ": [5, 14, 22], "arbitrarili": 5, "1_048_576": 5, "same": [5, 20, 23, 24], "char": [5, 6, 7, 8, 22], "2": [5, 11, 15, 17], "doubl": [5, 7, 8, 15], "2f": 5, "float": [5, 7, 15, 16, 17, 23, 24], "perform": 5, "These": 5, "descript": 5, "rank": 5, "b": [5, 7, 8, 11, 15, 17], "boolean": [5, 14], "comparison": 5, "4": [5, 11, 15, 22], "addit": 5, "subtract": 5, "concaten": [5, 22], "6": [5, 11], "divis": 5, "bitwis": 5, "7": [5, 11], "left": [5, 11, 16], "shift": 5, "xor": 5, "9": [5, 11], "short": 5, "circuit": 5, "higher": 5, "preced": 5, "over": [5, 23], "lower": [5, 22], "loosest": 5, "placement": 5, "order": 5, "w": 5, "legaci": 5, "holdov": 5, "had": [5, 20, 24], "clarifi": 5, "parenthes": 5, "els": [5, 13], "true": [5, 11, 13, 14, 22, 24], "evalu": 5, "seri": 5, "culmin": 5, "returntyp": 5, "functionnam": 5, "parametertyp": 5, "parameternam": 5, "ret": 5, "foo": [5, 13], "until": [5, 18, 23], "caller": 5, "exit": [5, 23], "explicit": 5, "reach": 5, "infer": 5, "bodi": 5, "comma": 5, "sin": [5, 10, 15], "empti": [5, 12, 19], "paren": 5, "implicitli": 5, "dowork": 5, "properti": [5, 24], "ufc": 5, "form": [5, 13], "did": 5, "interpret": [5, 14], "global": 5, "member": 5, "twice": 5, "assert": [5, 7, 8, 11, 13, 14, 15, 17, 22, 23], "reorder": 5, "remain": 5, "valid": 5, "surround": 5, "after": 5, "lead": [5, 22], "crash": 5, "signatur": 5, "mut": 5, "e": [5, 7, 11], "f": [5, 15], "Then": 5, "taken": [5, 23, 24], "initi": [5, 11, 23, 24], "later": 5, "subset": 5, "bar": [5, 13, 23], "disabl": 5, "pend": 5, "renov": 5, "superflu": 5, "combin": 5, "visibl": 5, "outsid": 5, "termin": [5, 22], "semicolon": 5, "reassign": 5, "condit": [5, 11, 23], "saniti": 5, "desert": 5, "case": [5, 22], "getfoo": 5, "nullabl": 5, "null": 5, "convert": [5, 11, 14, 22], "ltoa": [5, 8], "index": [5, 9], "iter": 5, "rare": 5, "immedi": 5, "abort": 5, "next": [5, 19], "sign": 5, "16": 5, "byte": [5, 22], "unit": [5, 23], "unsign": 5, "word": 5, "ieee": 5, "number": [5, 7, 23, 24], "slice": [5, 10, 22], "consist": [5, 11], "pointer": [5, 22], "object": [5, 14], "heap": 5, "append": 5, "effici": 5, "third": [5, 7], "element": [5, 11], "base": [5, 13], "independ": 5, "0f": 5, "field": 5, "min": [5, 10, 15], "max": [5, 10, 15], "either": 5, "itoa": [5, 8, 10, 22], "ftoa": [5, 8], "fail": [5, 6, 7], "enabl": 5, "filenotfound": 5, "readal": 5, "variou": [5, 16], "hidden": 5, "oppos": 5, "hold": 5, "special": 5, "instanti": [5, 24], "indic": [5, 23], "directli": 5, "rather": 5, "parent": [5, 13], "overrid": 5, "redefin": 5, "thin": 5, "exchang": 5, "instanceof": 5, "covari": 5, "contravari": 5, "qualifi": 5, "By": 5, "treat": 5, "fals": 5, "differenti": 5, "ident": [5, 16], "centimet": 5, "meter": 5, "given": [5, 11, 13, 14, 22], "sinc": 5, "exist": [5, 10, 13], "wrapper": [5, 23], "around": [5, 16, 23], "parameter": 5, "eponym": 5, "templ": 5, "behavior": 5, "placehold": 5, "bool": [5, 6, 7, 8, 11, 12, 13, 14, 19, 22, 23, 24], "front": [5, 11, 19], "uniqu": [5, 23], "store": [5, 23], "Their": 5, "purpos": 5, "filter": [5, 10, 11], "extend": 5, "hook": 5, "macroth": 5, "recommend": 5, "token": [6, 7, 23], "isalnum": 6, "isalpha": 6, "isnumer": 6, "isutf8mbstart": 6, "iswhitespac": [6, 7], "tostr": [6, 10, 14], "ch": [6, 7], "row": [6, 16], "col": 6, "loc": 7, "parserimpl": 7, "isdigit": 7, "ishexdigit": 7, "parsebinarynumb": 7, "parsefloat": 7, "parsehexnumb": 7, "parsenumb": 7, "precomputestriptarget": 7, "startswith": [7, 10, 22], "utf8decod": 7, "utf8nextlength": 7, "tobackendloc": 7, "fileidt": 7, "backendloc": 7, "locat": 7, "messag": 7, "locrang": 7, "flag": 7, "hardcheck": 7, "caught": 7, "earlier": 7, "assert2s2": 7, "assert2s3": 7, "assert2s4": 7, "assert2s5": 7, "fileid": 7, "fulltext": 7, "verifytransact": 7, "msg": 7, "dg": 7, "parseidentifi": 7, "verifi": 7, "accepttoken": 7, "tokentyp": 7, "accepttoken2": 7, "accepttoken3": 7, "accepttoken2not": 7, "nomatch": 7, "accepttoken2not2": 7, "nomatch1": 7, "nomatch2": 7, "accepttokenstr": 7, "acceptidentifi": 7, "identifi": 7, "expecttoken": 7, "revert": 7, "peektoken": 7, "droptoken": 7, "accept": 7, "hard_eof": 7, "meaning": 7, "content": 7, "whitespac": [7, 22], "parselastcom": 7, "failur": 7, "withbaseprefix": 7, "haystack": [7, 22], "needl": [7, 22], "neg": 7, "atoa": 8, "atof": 8, "atoi": [8, 10, 22], "atol": 8, "btoa": 8, "ctoa": 8, "die": 8, "dtoa_hex": 8, "ptoa": 8, "tostringz": [8, 10, 22], "l": [8, 11], "ptr": [8, 22], "checkindex": 9, "cumulativefold": [10, 11], "sort": [10, 11], "splitter": [10, 11], "binheapimpl": [10, 12], "basenam": [10, 13], "dirnam": [10, 13], "readfil": [10, 13], "realpath": [10, 13], "remov": [10, 13, 22], "withoutextens": [10, 13], "writefil": [10, 13], "writetext": [10, 13], "jsonvalu": [10, 14], "__jv": [10, 14], "ab": [10, 15], "aco": [10, 15], "atan2": [10, 15], "co": [10, 15], "exp": [10, 15], "pow": [10, 15], "sqrt": [10, 15], "tan": [10, 15], "mat4x4": [10, 16], "angl": [10, 15, 16, 17], "cross": [10, 17], "normal": [10, 17], "exec": [10, 18], "getenv": [10, 18], "readback": [10, 18], "intiota": [10, 19], "bylin": [10, 21], "ctostr": [10, 22], "ctostringfre": [10, 22], "endswith": [10, 22], "join": [10, 22], "replac": [10, 22], "tohexstr": [10, 22], "condvar": [10, 23], "mutex": [10, 23], "semaphor": [10, 23], "threadloc": [10, 23], "threadpool": [10, 23], "waitabl": [10, 23], "stopwatch": [10, 24], "fulfil": [11, 23], "typeof": 11, "seed": 11, "r": [11, 16], "appli": 11, "repeatedli": 11, "15": 11, "onto": 11, "input": 11, "output": [11, 18, 21], "smaller": 11, "heapier": 12, "insert": 12, "extract": 12, "txt": 13, "directori": 13, "ubyt": [13, 20, 22], "buffer": 13, "canonic": 13, "pathnam": 13, "delet": 13, "filesystem": 13, "abcd": 13, "unchang": 13, "pars": 14, "str": [14, 21, 22], "loadfil": 14, "isarrai": 14, "isobject": 14, "jv": 14, "posit": 15, "arc": 15, "cosin": 15, "tangent": 15, "axi": [15, 16], "radian": [15, 16, 17], "exponenti": 15, "maximum": 15, "minimum": 15, "rais": 15, "sine": 15, "squar": 15, "4x4": 16, "major": 16, "past": [16, 20], "opengl": 16, "manpag": 16, "rotatex": 16, "rotat": 16, "rotatei": 16, "rotatez": 16, "scale": 16, "three": 16, "dimens": 16, "translat": 16, "mul": 16, "multipli": 16, "vec4f": 16, "transpos": 16, "rotationx": 16, "rotationi": 16, "rotationz": 16, "ax": 16, "ortho": 16, "bottom_": 16, "orthogon": 16, "vec3f": 17, "found": 18, "environ": 18, "command": 18, "shell": 18, "wrote": 18, "sha": 20, "256": 20, "hash": 20, "piec": 20, "onc": 20, "filehandl": 21, "lineread": 21, "neat": 22, "conveni": [22, 23], "offset": 22, "occur": 22, "o": 22, "sep": 22, "occurr": 22, "fragment": 22, "halv": 22, "trail": 22, "hexadecim": 22, "represent": 22, "wait": 23, "signal": 23, "provid": 23, "unlock": 23, "intermedi": 23, "wake": 23, "least": 23, "broadcast": 23, "mutual": 23, "exclus": 23, "pair": 23, "enforc": 23, "islock": 23, "returntest": 23, "lockguard": 23, "scope": 23, "guard": 23, "unlockguard": 23, "loop": 23, "acquir": 23, "consum": 23, "superclass": 23, "schedul": 23, "pool": 23, "wrap": 23, "per": 23, "decoupl": 23, "action": 23, "queue": 23, "becom": 23, "waitcomplet": 23, "progress": 23, "queu": 23, "complet": 23, "callback": 23, "invok": 23, "standalon": 23, "tool": 23, "present": 23, "addtask": 23, "gettask": 23, "intern": 23, "outcom": 23, "waitfor": 23, "waitreact": 23, "measur": 24, "stop": 24, "accumul": 24, "reset": 24, "previou": 24, "atom": 24, "checkpoint": 24, "describ": 24, "timezon": 24, "secondssinc": 24, "fraction": 24, "current": 24}, "objects": {"": [[12, 0, 1, "", "BinHeapImpl"], [23, 0, 1, "", "CondVar"], [19, 0, 1, "", "IntIota"], [19, 0, 1, "", "Iota"], [14, 0, 1, "", "JSONValue"], [7, 0, 1, "", "Loc"], [23, 0, 1, "", "Mutex"], [7, 0, 1, "", "ParserImpl"], [23, 0, 1, "", "Semaphore"], [20, 0, 1, "", "Sha256"], [24, 0, 1, "", "Stopwatch"], [23, 0, 1, "", "Task"], [23, 0, 1, "", "ThreadLocal"], [23, 0, 1, "", "ThreadPool"], [24, 0, 1, "", "Time"], [6, 0, 1, "", "Token"], [23, 0, 1, "", "Waitable"], [14, 2, 1, "jv", "__jv"], [15, 2, 1, "id2", "abs"], [15, 2, 1, "", "acos"], [11, 2, 1, "", "all"], [17, 2, 1, "", "angle"], [11, 2, 1, "", "any"], [11, 2, 1, "", "array"], [8, 2, 1, "", "assert"], [15, 2, 1, "", "atan2"], [8, 2, 1, "", "atoa"], [8, 2, 1, "", "atof"], [22, 2, 1, "", "atoi"], [8, 2, 1, "", "atol"], [13, 2, 1, "", "basename"], [12, 2, 1, "", "binHeap"], [8, 2, 1, "", "btoa"], [21, 2, 1, "", "byLine"], [22, 2, 1, "", "cToString"], [22, 2, 1, "", "cToStringFree"], [9, 2, 1, "", "checkIndex"], [15, 2, 1, "", "cos"], [17, 2, 1, "", "cross"], [8, 2, 1, "", "ctoa"], [11, 2, 1, "", "cumulativeFold"], [8, 2, 1, "", "die"], [13, 2, 1, "", "dirname"], [8, 2, 1, "", "dtoa_hex"], [22, 2, 1, "", "endsWith"], [18, 2, 1, "", "exec"], [13, 2, 1, "", "exists"], [15, 2, 1, "", "exp"], [11, 2, 1, "", "filter"], [22, 2, 1, "", "find"], [8, 2, 1, "", "ftoa"], [18, 2, 1, "", "getEnv"], [6, 2, 1, "", "isAlnum"], [6, 2, 1, "", "isAlpha"], [7, 2, 1, "", "isDigit"], [7, 2, 1, "", "isHexDigit"], [6, 2, 1, "", "isNumeric"], [6, 2, 1, "", "isUtf8MbStart"], [7, 2, 1, "", "isWhitespace"], [22, 2, 1, "", "itoa"], [22, 2, 1, "", "join"], [17, 2, 1, "", "length"], [8, 2, 1, "", "ltoa"], [11, 2, 1, "", "map"], [16, 0, 1, "", "mat4x4"], [15, 2, 1, "id5", "max"], [15, 2, 1, "id8", "min"], [13, 2, 1, "", "mkdir"], [17, 2, 1, "", "normal"], [7, 2, 1, "", "parseBinaryNumber"], [7, 2, 1, "", "parseFloat"], [7, 2, 1, "", "parseHexNumber"], [7, 2, 1, "", "parseNumber"], [15, 2, 1, "", "pow"], [7, 2, 1, "", "precomputeStripTargets"], [21, 2, 1, "", "print"], [0, 0, 1, "", "pthread_attr_t"], [0, 0, 1, "", "pthread_cond_t"], [0, 0, 1, "", "pthread_key_t"], [0, 0, 1, "", "pthread_mutex_t"], [0, 0, 1, "", "pthread_mutexattr_t"], [0, 0, 1, "", "pthread_t"], [8, 2, 1, "", "ptoa"], [13, 2, 1, "", "readFile"], [13, 2, 1, "", "readText"], [18, 2, 1, "", "readback"], [13, 2, 1, "", "realpath"], [13, 2, 1, "", "remove"], [22, 2, 1, "", "replace"], [15, 2, 1, "", "sin"], [22, 2, 1, "", "slice"], [11, 2, 1, "", "sort"], [22, 2, 1, "", "split"], [11, 2, 1, "", "splitter"], [15, 2, 1, "", "sqrt"], [22, 2, 1, "", "startsWith"], [22, 2, 1, "", "strip"], [18, 2, 1, "", "system"], [15, 2, 1, "", "tan"], [1, 0, 1, "", "timeval"], [22, 2, 1, "", "toHexString"], [14, 2, 1, "", "toString"], [22, 2, 1, "", "toStringz"], [6, 2, 1, "", "tokenize"], [7, 2, 1, "", "utf8Decode"], [7, 2, 1, "", "utf8NextLength"], [13, 2, 1, "", "withoutExtension"], [13, 2, 1, "", "writeFile"], [13, 2, 1, "", "writeText"]], "BinHeapImpl": [[12, 1, 1, "", "empty"], [12, 1, 1, "", "extract"], [12, 1, 1, "", "insert"], [12, 1, 1, "", "length"], [12, 1, 1, "", "this"]], "CondVar": [[23, 1, 1, "", "broadcast"], [23, 1, 1, "", "signal"], [23, 1, 1, "", "this"], [23, 1, 1, "", "wait"]], "IntIota": [[19, 1, 1, "", "empty"], [19, 1, 1, "", "front"], [19, 1, 1, "", "length"], [19, 1, 1, "", "next"]], "Iota": [[19, 1, 1, "", "empty"], [19, 1, 1, "", "front"], [19, 1, 1, "", "length"], [19, 1, 1, "", "next"]], "JSONValue": [[14, 1, 1, "", "array"], [14, 1, 1, "", "boolean"], [14, 1, 1, "", "get"], [14, 1, 1, "", "has"], [14, 1, 1, "", "integer"], [14, 1, 1, "", "isArray"], [14, 1, 1, "", "isObject"], [14, 1, 1, "", "keys"], [14, 1, 1, "", "loadFile"], [14, 1, 1, "", "object"], [14, 1, 1, "", "parse"], [14, 1, 1, "", "set"], [14, 1, 1, "", "str"]], "Loc": [[7, 1, 1, "", "assert"], [7, 1, 1, "", "assert2s2"], [7, 1, 1, "", "assert2s3"], [7, 1, 1, "", "assert2s4"], [7, 1, 1, "", "assert2s5"], [7, 1, 1, "", "fail"], [7, 1, 1, "", "hardCheck"], [7, 1, 1, "", "locRange"], [7, 1, 1, "", "location"], [7, 1, 1, "", "toBackendLoc"]], "Mutex": [[23, 1, 1, "", "lock"], [23, 1, 1, "", "locked"], [23, 1, 1, "", "this"], [23, 1, 1, "", "unlock"], [23, 1, 1, "", "unlocked"]], "ParserImpl": [[7, 1, 1, "", "accept"], [7, 1, 1, "", "acceptIdentifier"], [7, 1, 1, "", "acceptToken"], [7, 1, 1, "", "acceptToken2"], [7, 1, 1, "", "acceptToken2Not"], [7, 1, 1, "", "acceptToken2Not2"], [7, 1, 1, "", "acceptToken3"], [7, 1, 1, "", "acceptTokenStr"], [7, 1, 1, "", "assert2s2"], [7, 1, 1, "", "assert2s3"], [7, 1, 1, "", "assert2s4"], [7, 1, 1, "", "assert2s5"], [7, 1, 1, "", "begin"], [7, 1, 1, "", "commit"], [7, 1, 1, "", "dropToken"], [7, 1, 1, "", "eof"], [7, 1, 1, "", "expectToken"], [7, 1, 1, "", "fail"], [7, 1, 1, "", "from"], [7, 1, 1, "", "hard_eof"], [7, 1, 1, "", "loc"], [7, 1, 1, "", "parseIdentifier"], [7, 1, 1, "", "parseLastComment"], [7, 1, 1, "", "parseNumber"], [7, 1, 1, "", "peekToken"], [7, 1, 1, "", "revert"], [7, 1, 1, "", "strip"], [7, 1, 1, "", "text"], [7, 1, 1, "", "this"], [7, 1, 1, "", "to"], [7, 1, 1, "", "verify"], [7, 1, 1, "", "verifyTransactions"]], "Semaphore": [[23, 1, 1, "", "acquire"], [23, 1, 1, "", "release"], [23, 1, 1, "", "this"]], "Sha256": [[20, 1, 1, "", "finalize"], [20, 1, 1, "", "this"], [20, 1, 1, "", "update"]], "Stopwatch": [[24, 1, 1, "", "reset"], [24, 1, 1, "", "seconds"], [24, 1, 1, "", "split"], [24, 1, 1, "", "start"], [24, 1, 1, "", "stop"], [24, 1, 1, "", "stopped"], [24, 1, 1, "", "this"]], "Task": [[23, 1, 1, "", "run"]], "ThreadLocal": [[23, 1, 1, "", "get"], [23, 1, 1, "", "set"], [23, 1, 1, "", "this"]], "ThreadPool": [[23, 1, 1, "", "addTask"], [23, 1, 1, "", "getTask"], [23, 1, 1, "", "this"], [23, 1, 1, "", "waitComplete"]], "Time": [[24, 1, 1, "", "now"], [24, 1, 1, "", "secondsSince"]], "Token": [[6, 1, 1, "", "toString"]], "Waitable": [[23, 1, 1, "", "set"], [23, 1, 1, "", "this"], [23, 1, 1, "", "update"], [23, 1, 1, "", "waitFor"], [23, 1, 1, "", "waitReact"]], "mat4x4": [[16, 1, 1, "", "identity"], [16, 1, 1, "", "mul"], [16, 1, 1, "", "ortho"], [16, 1, 1, "", "rotateX"], [16, 1, 1, "", "rotateY"], [16, 1, 1, "", "rotateZ"], [16, 1, 1, "", "rotationX"], [16, 1, 1, "", "rotationY"], [16, 1, 1, "", "rotationZ"], [16, 1, 1, "", "row"], [16, 1, 1, "", "scale"], [16, 1, 1, "", "scaling"], [16, 1, 1, "", "translate"], [16, 1, 1, "", "translation"], [16, 1, 1, "", "transpose"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"c": [0, 1, 5], "pthread": 0, "sy": 1, "time": [1, 24], "get": 2, "start": 2, "instal": 2, "llvm": 2, "gcc": 2, "project": 2, "binari": 2, "librari": [2, 10], "kei": 2, "version": 2, "specif": 2, "good": 2, "bad": 2, "neat": [2, 3, 4, 5, 6, 7, 8, 9], "pure": 2, "function": [2, 5], "ar": 2, "just": 2, "better": 2, "struct": [2, 5], "valu": 2, "class": [2, 5], "owner": 2, "don": 2, "t": 2, "microoptim": 2, "us": 2, "pointer": 2, "closur": 2, "dynam": 2, "base": 2, "i": [2, 4], "macro": [2, 5], "great": 2, "final": [2, 4], "The": [3, 5], "languag": [3, 4, 5], "commun": 3, "content": [3, 10], "introduct": 4, "what": 4, "why": 4, "make": 4, "anoth": 4, "new": 4, "okai": 4, "so": 4, "like": 4, "A": 4, "digress": 4, "refer": 4, "count": 4, "product": 4, "readi": 4, "note": 4, "secur": 4, "lexic": 5, "modul": 5, "packag": 5, "level": 5, "statement": 5, "import": 5, "declar": 5, "extern": 5, "express": 5, "liter": 5, "arithmet": 5, "ternari": 5, "If": 5, "call": 5, "uniform": 5, "syntax": 5, "name": 5, "argument": 5, "nest": 5, "main": 5, "variabl": 5, "extract": 5, "block": 5, "assign": 5, "test": 5, "while": 5, "loop": 5, "For": 5, "break": 5, "continu": 5, "type": 5, "basic": 5, "arrai": [5, 9], "tupl": 5, "sum": 5, "symbol": 5, "identifi": 5, "typeof": 5, "unittest": 5, "templat": 5, "rang": [5, 19], "lambda": 5, "lexer": 6, "parser": 7, "runtim": [8, 9], "standard": 10, "std": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "algorithm": 11, "contain": 12, "binheap": 12, "file": 13, "json": 14, "math": [15, 16, 17], "matrix": 16, "vector": 17, "process": 18, "iota": 19, "sha256": 20, "stdio": 21, "string": 22, "thread": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"c.pthread": [[0, "id1"]], "c.sys.time": [[1, "id1"]], "Getting Started": [[2, "getting-started"]], "Install with LLVM": [[2, "install-with-llvm"]], "Install with GCC": [[2, "install-with-gcc"]], "Start a Project": [[2, "start-a-project"]], "Binary": [[2, "binary"]], "Library": [[2, "library"]], "Keys": [[2, "keys"]], "Version Specification": [[2, "version-specification"]], "Good and Bad Neat": [[2, "good-and-bad-neat"]], "Pure functions are Just Better": [[2, "pure-functions-are-just-better"]], "Structs are values, classes are owners": [[2, "structs-are-values-classes-are-owners"]], "Don\u2019t microoptimize": [[2, "don-t-microoptimize"]], "Don\u2019t use pointers": [[2, "don-t-use-pointers"]], "Closures are dynamic": [[2, "closures-are-dynamic"]], "neat.base is the key to macros": [[2, "neat-base-is-the-key-to-macros"]], "Neat is not great, Neat is not final": [[2, "neat-is-not-great-neat-is-not-final"]], "The Neat Language": [[3, "the-neat-language"], [5, "the-neat-language"]], "Community": [[3, "community"]], "Contents": [[3, "contents"]], "Introduction": [[4, "introduction"]], "What is Neat?": [[4, "what-is-neat"]], "Why make another new language?": [[4, "why-make-another-new-language"]], "Okay, so what is Neat like?": [[4, "okay-so-what-is-neat-like"]], "A digression: why reference counting?": [[4, "a-digression-why-reference-counting"]], "Is Neat production ready?": [[4, "is-neat-production-ready"]], "A note on security": [[4, "a-note-on-security"]], "Final notes": [[4, "final-notes"]], "Lexical": [[5, "lexical"]], "Modules": [[5, "modules"]], "Packages": [[5, "packages"]], "Module-Level Statements": [[5, "module-level-statements"]], "Import": [[5, "import"]], "Declaration": [[5, "declaration"]], "Extern(C)": [[5, "extern-c"]], "Expressions": [[5, "expressions"]], "Literals": [[5, "literals"]], "Arithmetic": [[5, "arithmetic"]], "Ternary If": [[5, "ternary-if"]], "Functions": [[5, "functions"]], "Call": [[5, "call"]], "Uniform Function Call Syntax": [[5, "uniform-function-call-syntax"]], "Named Arguments": [[5, "named-arguments"]], "Nested functions": [[5, "nested-functions"]], "main": [[5, "main"]], "Statements": [[5, "statements"]], "Variable declaration": [[5, "variable-declaration"]], "Variable extraction declaration": [[5, "variable-extraction-declaration"]], "Block statement": [[5, "block-statement"]], "Expression statement": [[5, "expression-statement"]], "Assignment": [[5, "assignment"]], "If test": [[5, "if-test"]], "While loop": [[5, "while-loop"]], "For loop": [[5, "for-loop"]], "break, continue": [[5, "break-continue"]], "Types": [[5, "types"]], "Basic types": [[5, "basic-types"]], "Array": [[5, "array"]], "Tuple": [[5, "tuple"]], "Sum type": [[5, "sum-type"]], "Struct": [[5, "struct"]], "Class": [[5, "class"]], "Symbol Identifier": [[5, "symbol-identifier"]], "typeof": [[5, "typeof"]], "Unittest": [[5, "unittest"]], "Templates": [[5, "templates"]], "Ranges": [[5, "ranges"]], "Lambdas": [[5, "lambdas"]], "Macros": [[5, "macros"]], "neat.lexer": [[6, "id1"]], "neat.parser": [[7, "id1"]], "neat.runtime": [[8, "id1"]], "neat.runtime.array": [[9, "id1"]], "Standard Library": [[10, "standard-library"]], "Contents:": [[10, null]], "std.algorithm": [[11, "id1"]], "std.container.binheap": [[12, "id1"]], "std.file": [[13, "id1"]], "std.json": [[14, "id1"]], "std.math": [[15, "id1"]], "std.math.matrix": [[16, "id1"]], "std.math.vector": [[17, "id1"]], "std.process": [[18, "id1"]], "std.range.iota": [[19, "id1"]], "std.sha256": [[20, "id1"]], "std.stdio": [[21, "id1"]], "std.string": [[22, "id1"]], "std.thread": [[23, "id1"]], "std.time": [[24, "id1"]]}, "indexentries": {"pthread_attr_t (built-in class)": [[0, "pthread_attr_t"]], "pthread_cond_t (built-in class)": [[0, "pthread_cond_t"]], "pthread_key_t (built-in class)": [[0, "pthread_key_t"]], "pthread_mutex_t (built-in class)": [[0, "pthread_mutex_t"]], "pthread_mutexattr_t (built-in class)": [[0, "pthread_mutexattr_t"]], "pthread_t (built-in class)": [[0, "pthread_t"]], "timeval (built-in class)": [[1, "timeval"]], "token (built-in class)": [[6, "Token"]], "built-in function": [[6, "isAlnum"], [6, "isAlpha"], [6, "isNumeric"], [6, "isUtf8MbStart"], [6, "isWhitespace"], [6, "tokenize"], [7, "find"], [7, "isDigit"], [7, "isHexDigit"], [7, "isWhitespace"], [7, "parseBinaryNumber"], [7, "parseFloat"], [7, "parseHexNumber"], [7, "parseNumber"], [7, "precomputeStripTargets"], [7, "startsWith"], [7, "utf8Decode"], [7, "utf8NextLength"], [8, "assert"], [8, "atoa"], [8, "atof"], [8, "atoi"], [8, "atol"], [8, "btoa"], [8, "ctoa"], [8, "die"], [8, "dtoa_hex"], [8, "ftoa"], [8, "itoa"], [8, "ltoa"], [8, "ptoa"], [8, "toStringz"], [9, "checkIndex"], [11, "all"], [11, "any"], [11, "array"], [11, "cumulativeFold"], [11, "filter"], [11, "map"], [11, "sort"], [11, "splitter"], [12, "binHeap"], [13, "basename"], [13, "dirname"], [13, "exists"], [13, "mkdir"], [13, "readFile"], [13, "readText"], [13, "realpath"], [13, "remove"], [13, "withoutExtension"], [13, "writeFile"], [13, "writeText"], [14, "jv"], [14, "toString"], [15, "abs"], [15, "acos"], [15, "atan2"], [15, "cos"], [15, "exp"], [15, "id0"], [15, "id2"], [15, "id3"], [15, "id4"], [15, "id5"], [15, "id6"], [15, "id7"], [15, "id8"], [15, "max"], [15, "min"], [15, "pow"], [15, "sin"], [15, "sqrt"], [15, "tan"], [17, "angle"], [17, "cross"], [17, "length"], [17, "normal"], [18, "exec"], [18, "getEnv"], [18, "readback"], [18, "system"], [21, "byLine"], [21, "print"], [22, "atoi"], [22, "cToString"], [22, "cToStringFree"], [22, "endsWith"], [22, "find"], [22, "itoa"], [22, "join"], [22, "replace"], [22, "slice"], [22, "split"], [22, "startsWith"], [22, "strip"], [22, "toHexString"], [22, "toStringz"]], "isalnum()": [[6, "isAlnum"]], "isalpha()": [[6, "isAlpha"]], "isnumeric()": [[6, "isNumeric"]], "isutf8mbstart()": [[6, "isUtf8MbStart"]], "iswhitespace()": [[6, "isWhitespace"], [7, "isWhitespace"]], "tostring() (token method)": [[6, "Token.toString"]], "tokenize()": [[6, "tokenize"]], "loc (built-in class)": [[7, "Loc"]], "parserimpl (built-in class)": [[7, "ParserImpl"]], "accept() (parserimpl method)": [[7, "ParserImpl.accept"]], "acceptidentifier() (parserimpl method)": [[7, "ParserImpl.acceptIdentifier"]], "accepttoken() (parserimpl method)": [[7, "ParserImpl.acceptToken"]], "accepttoken2() (parserimpl method)": [[7, "ParserImpl.acceptToken2"]], "accepttoken2not() (parserimpl method)": [[7, "ParserImpl.acceptToken2Not"]], "accepttoken2not2() (parserimpl method)": [[7, "ParserImpl.acceptToken2Not2"]], "accepttoken3() (parserimpl method)": [[7, "ParserImpl.acceptToken3"]], "accepttokenstr() (parserimpl method)": [[7, "ParserImpl.acceptTokenStr"]], "assert() (loc method)": [[7, "Loc.assert"]], "assert2s2() (loc method)": [[7, "Loc.assert2s2"]], "assert2s2() (parserimpl method)": [[7, "ParserImpl.assert2s2"]], "assert2s3() (loc method)": [[7, "Loc.assert2s3"]], "assert2s3() (parserimpl method)": [[7, "ParserImpl.assert2s3"]], "assert2s4() (loc method)": [[7, "Loc.assert2s4"]], "assert2s4() (parserimpl method)": [[7, "ParserImpl.assert2s4"]], "assert2s5() (loc method)": [[7, "Loc.assert2s5"]], "assert2s5() (parserimpl method)": [[7, "ParserImpl.assert2s5"]], "begin() (parserimpl method)": [[7, "ParserImpl.begin"]], "commit() (parserimpl method)": [[7, "ParserImpl.commit"]], "droptoken() (parserimpl method)": [[7, "ParserImpl.dropToken"]], "eof() (parserimpl method)": [[7, "ParserImpl.eof"]], "expecttoken() (parserimpl method)": [[7, "ParserImpl.expectToken"]], "fail() (loc method)": [[7, "Loc.fail"]], "fail() (parserimpl method)": [[7, "ParserImpl.fail"]], "find()": [[7, "find"], [22, "find"]], "from() (parserimpl method)": [[7, "ParserImpl.from"]], "hardcheck() (loc method)": [[7, "Loc.hardCheck"]], "hard_eof() (parserimpl method)": [[7, "ParserImpl.hard_eof"]], "isdigit()": [[7, "isDigit"]], "ishexdigit()": [[7, "isHexDigit"]], "loc() (parserimpl method)": [[7, "ParserImpl.loc"]], "locrange() (loc method)": [[7, "Loc.locRange"]], "location() (loc method)": [[7, "Loc.location"]], "parsebinarynumber()": [[7, "parseBinaryNumber"]], "parsefloat()": [[7, "parseFloat"]], "parsehexnumber()": [[7, "parseHexNumber"]], "parseidentifier() (parserimpl method)": [[7, "ParserImpl.parseIdentifier"]], "parselastcomment() (parserimpl method)": [[7, "ParserImpl.parseLastComment"]], "parsenumber()": [[7, "parseNumber"]], "parsenumber() (parserimpl method)": [[7, "ParserImpl.parseNumber"]], "peektoken() (parserimpl method)": [[7, "ParserImpl.peekToken"]], "precomputestriptargets()": [[7, "precomputeStripTargets"]], "revert() (parserimpl method)": [[7, "ParserImpl.revert"]], "startswith()": [[7, "startsWith"], [22, "startsWith"]], "strip() (parserimpl method)": [[7, "ParserImpl.strip"]], "text() (parserimpl method)": [[7, "ParserImpl.text"]], "this() (parserimpl method)": [[7, "ParserImpl.this"]], "to() (parserimpl method)": [[7, "ParserImpl.to"]], "tobackendloc() (loc method)": [[7, "Loc.toBackendLoc"]], "utf8decode()": [[7, "utf8Decode"]], "utf8nextlength()": [[7, "utf8NextLength"]], "verify() (parserimpl method)": [[7, "ParserImpl.verify"]], "verifytransactions() (parserimpl method)": [[7, "ParserImpl.verifyTransactions"]], "assert()": [[8, "assert"]], "atoa()": [[8, "atoa"]], "atof()": [[8, "atof"]], "atoi()": [[8, "atoi"], [22, "atoi"]], "atol()": [[8, "atol"]], "btoa()": [[8, "btoa"]], "ctoa()": [[8, "ctoa"]], "die()": [[8, "die"]], "dtoa_hex()": [[8, "dtoa_hex"]], "ftoa()": [[8, "ftoa"]], "itoa()": [[8, "itoa"], [22, "itoa"]], "ltoa()": [[8, "ltoa"]], "ptoa()": [[8, "ptoa"]], "tostringz()": [[8, "toStringz"], [22, "toStringz"]], "checkindex()": [[9, "checkIndex"]], "all()": [[11, "all"]], "any()": [[11, "any"]], "array()": [[11, "array"]], "cumulativefold()": [[11, "cumulativeFold"]], "filter()": [[11, "filter"]], "map()": [[11, "map"]], "sort()": [[11, "sort"]], "splitter()": [[11, "splitter"]], "binheapimpl (built-in class)": [[12, "BinHeapImpl"]], "binheap()": [[12, "binHeap"]], "empty() (binheapimpl method)": [[12, "BinHeapImpl.empty"]], "extract() (binheapimpl method)": [[12, "BinHeapImpl.extract"]], "insert() (binheapimpl method)": [[12, "BinHeapImpl.insert"]], "length() (binheapimpl method)": [[12, "BinHeapImpl.length"]], "this() (binheapimpl method)": [[12, "BinHeapImpl.this"]], "basename()": [[13, "basename"]], "dirname()": [[13, "dirname"]], "exists()": [[13, "exists"]], "mkdir()": [[13, "mkdir"]], "readfile()": [[13, "readFile"]], "readtext()": [[13, "readText"]], "realpath()": [[13, "realpath"]], "remove()": [[13, "remove"]], "withoutextension()": [[13, "withoutExtension"]], "writefile()": [[13, "writeFile"]], "writetext()": [[13, "writeText"]], "jsonvalue (built-in class)": [[14, "JSONValue"]], "__jv()": [[14, "jv"]], "array() (jsonvalue method)": [[14, "JSONValue.array"]], "boolean() (jsonvalue method)": [[14, "JSONValue.boolean"]], "get() (jsonvalue method)": [[14, "JSONValue.get"]], "has() (jsonvalue method)": [[14, "JSONValue.has"]], "integer() (jsonvalue method)": [[14, "JSONValue.integer"]], "isarray() (jsonvalue method)": [[14, "JSONValue.isArray"]], "isobject() (jsonvalue method)": [[14, "JSONValue.isObject"]], "keys() (jsonvalue method)": [[14, "JSONValue.keys"]], "loadfile() (jsonvalue method)": [[14, "JSONValue.loadFile"]], "object() (jsonvalue method)": [[14, "JSONValue.object"]], "parse() (jsonvalue method)": [[14, "JSONValue.parse"]], "set() (jsonvalue method)": [[14, "JSONValue.set"]], "str() (jsonvalue method)": [[14, "JSONValue.str"]], "tostring()": [[14, "toString"]], "abs()": [[15, "abs"], [15, "id0"], [15, "id2"]], "acos()": [[15, "acos"]], "atan2()": [[15, "atan2"]], "cos()": [[15, "cos"]], "exp()": [[15, "exp"]], "max()": [[15, "id3"], [15, "id4"], [15, "id5"], [15, "max"]], "min()": [[15, "id6"], [15, "id7"], [15, "id8"], [15, "min"]], "pow()": [[15, "pow"]], "sin()": [[15, "sin"]], "sqrt()": [[15, "sqrt"]], "tan()": [[15, "tan"]], "identity() (mat4x4 method)": [[16, "mat4x4.identity"]], "mat4x4 (built-in class)": [[16, "mat4x4"]], "mul() (mat4x4 method)": [[16, "mat4x4.mul"]], "ortho() (mat4x4 method)": [[16, "mat4x4.ortho"]], "rotatex() (mat4x4 method)": [[16, "mat4x4.rotateX"]], "rotatey() (mat4x4 method)": [[16, "mat4x4.rotateY"]], "rotatez() (mat4x4 method)": [[16, "mat4x4.rotateZ"]], "rotationx() (mat4x4 method)": [[16, "mat4x4.rotationX"]], "rotationy() (mat4x4 method)": [[16, "mat4x4.rotationY"]], "rotationz() (mat4x4 method)": [[16, "mat4x4.rotationZ"]], "row() (mat4x4 method)": [[16, "mat4x4.row"]], "scale() (mat4x4 method)": [[16, "mat4x4.scale"]], "scaling() (mat4x4 method)": [[16, "mat4x4.scaling"]], "translate() (mat4x4 method)": [[16, "mat4x4.translate"]], "translation() (mat4x4 method)": [[16, "mat4x4.translation"]], "transpose() (mat4x4 method)": [[16, "mat4x4.transpose"]], "angle()": [[17, "angle"]], "cross()": [[17, "cross"]], "length()": [[17, "length"]], "normal()": [[17, "normal"]], "exec()": [[18, "exec"]], "getenv()": [[18, "getEnv"]], "readback()": [[18, "readback"]], "system()": [[18, "system"]], "intiota (built-in class)": [[19, "IntIota"]], "iota (built-in class)": [[19, "Iota"]], "empty() (intiota method)": [[19, "IntIota.empty"]], "empty() (iota method)": [[19, "Iota.empty"]], "front() (intiota method)": [[19, "IntIota.front"]], "front() (iota method)": [[19, "Iota.front"]], "length() (intiota method)": [[19, "IntIota.length"]], "length() (iota method)": [[19, "Iota.length"]], "next() (intiota method)": [[19, "IntIota.next"]], "next() (iota method)": [[19, "Iota.next"]], "sha256 (built-in class)": [[20, "Sha256"]], "finalize() (sha256 method)": [[20, "Sha256.finalize"]], "this() (sha256 method)": [[20, "Sha256.this"]], "update() (sha256 method)": [[20, "Sha256.update"]], "byline()": [[21, "byLine"]], "print()": [[21, "print"]], "ctostring()": [[22, "cToString"]], "ctostringfree()": [[22, "cToStringFree"]], "endswith()": [[22, "endsWith"]], "join()": [[22, "join"]], "replace()": [[22, "replace"]], "slice()": [[22, "slice"]], "split()": [[22, "split"]], "strip()": [[22, "strip"]], "tohexstring()": [[22, "toHexString"]], "condvar (built-in class)": [[23, "CondVar"]], "mutex (built-in class)": [[23, "Mutex"]], "semaphore (built-in class)": [[23, "Semaphore"]], "task (built-in class)": [[23, "Task"]], "threadlocal (built-in class)": [[23, "ThreadLocal"]], "threadpool (built-in class)": [[23, "ThreadPool"]], "waitable (built-in class)": [[23, "Waitable"]], "acquire() (semaphore method)": [[23, "Semaphore.acquire"]], "addtask() (threadpool method)": [[23, "ThreadPool.addTask"]], "broadcast() (condvar method)": [[23, "CondVar.broadcast"]], "get() (threadlocal method)": [[23, "ThreadLocal.get"]], "gettask() (threadpool method)": [[23, "ThreadPool.getTask"]], "lock() (mutex method)": [[23, "Mutex.lock"]], "locked() (mutex method)": [[23, "Mutex.locked"]], "release() (semaphore method)": [[23, "Semaphore.release"]], "run() (task method)": [[23, "Task.run"]], "set() (threadlocal method)": [[23, "ThreadLocal.set"]], "set() (waitable method)": [[23, "Waitable.set"]], "signal() (condvar method)": [[23, "CondVar.signal"]], "this() (condvar method)": [[23, "CondVar.this"]], "this() (mutex method)": [[23, "Mutex.this"]], "this() (semaphore method)": [[23, "Semaphore.this"]], "this() (threadlocal method)": [[23, "ThreadLocal.this"]], "this() (threadpool method)": [[23, "ThreadPool.this"]], "this() (waitable method)": [[23, "Waitable.this"]], "unlock() (mutex method)": [[23, "Mutex.unlock"]], "unlocked() (mutex method)": [[23, "Mutex.unlocked"]], "update() (waitable method)": [[23, "Waitable.update"]], "wait() (condvar method)": [[23, "CondVar.wait"]], "waitcomplete() (threadpool method)": [[23, "ThreadPool.waitComplete"]], "waitfor() (waitable method)": [[23, "Waitable.waitFor"]], "waitreact() (waitable method)": [[23, "Waitable.waitReact"]], "stopwatch (built-in class)": [[24, "Stopwatch"]], "time (built-in class)": [[24, "Time"]], "now() (time method)": [[24, "Time.now"]], "reset() (stopwatch method)": [[24, "Stopwatch.reset"]], "seconds() (stopwatch method)": [[24, "Stopwatch.seconds"]], "secondssince() (time method)": [[24, "Time.secondsSince"]], "split() (stopwatch method)": [[24, "Stopwatch.split"]], "start() (stopwatch method)": [[24, "Stopwatch.start"]], "stop() (stopwatch method)": [[24, "Stopwatch.stop"]], "stopped() (stopwatch method)": [[24, "Stopwatch.stopped"]], "this() (stopwatch method)": [[24, "Stopwatch.this"]]}})